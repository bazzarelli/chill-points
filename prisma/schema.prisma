generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL")
  directUrl         = env("POSTGRES_URL_NON_POOLING")
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING")
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  refresh_token_expires_in Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String               @id @default(cuid())
  name          String?
  bio           String?
  age           Int?
  email         String?              @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  games         GameSession[]
  sessions      Session[]
  preferences   UserGamePreference[]
}

model UserGamePreference {
  id             Int    @id @default(autoincrement())
  userId         String
  userCycleSpeed Int
  userGameLength Int
  user           User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model GameSession {
  id          Int      @id @default(autoincrement())
  userId      String
  gameName    String
  createdAt   DateTime @default(now())
  inhaleTimes Int[]
  cycleCount  Int
  gameLength  Int
  User        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FeedbackSurvey {
  id                  Int @id @default(autoincrement())
  createdAt           DateTime @default(now())
  surveyName          String
  dailyHabit          String
  dailyNotification   String
  finishedGame        String
  gameRating          String
  additionalFeedback  String
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
